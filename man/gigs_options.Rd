% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gigs_options.R
\name{gigs_options}
\alias{gigs_options}
\alias{gigs_option_get}
\alias{gigs_option_set}
\title{Get and set gigs package options}
\usage{
gigs_option_get(option, silent = FALSE)

gigs_option_set(option, new_value, silent = FALSE)
}
\arguments{
\item{option}{A single character variable, one of:
\itemize{
\item \code{"handle_missing"} - How should gigs handle missing (\code{NA}) data?
\item \code{"handle_undefined"} - How should gigs handle undefined (\code{NaN}, \code{Inf},
\code{-Inf}) data?
\item \code{"handle_invalid_xvar"} - How should gigs handle \code{x} variables that
are out of bounds for the standard in use?
\item \code{"handle_invalid_sex"} - How should gigs handle elements of \code{sex} which
are not one of \code{"M"} or \code{"F"}?
\item \code{"handle_invalid_acronym"} - In conversion functions, how should gigs
handle \code{acronym} elements which do not map onto any implemented growth
standard?
\item \code{"handle_invalid_centiles"} - In \code{centile2value} functions, how should
gigs handle elements of \code{p} that are not between \code{0} and \code{1}?
}}

\item{silent}{A single logical value denoting whether the function will send
a \code{message()} to the console describing either:
\itemize{
\item The current value of \code{option} for \code{gigs_option_get()}.
\item The newly-set value of \code{option} for \code{gigs_option_set()}.
}}

\item{new_value}{A single character variable, one of:
\itemize{
\item \code{"quiet"} - gigs will replace invalid vector elements to \code{NA} quietly
\item \code{"warn"} - gigs will replace invalid vector elements with \code{NA} loudly
\item \code{"error"} - gigs will throw informative errors if invalid inputs are
encountered
}}
}
\value{
For \code{\link[=gigs_option_get]{gigs_option_get()}}, noisiliy returns the current value of
\code{option}. For \code{\link[=gigs_option_set]{gigs_option_set()}}, invisibly returns the new value of
\code{option}.
}
\description{
By default, gigs will handle invalid input data, e.g. missing
(\code{NA}) or undefined (\code{NaN}, \code{Inf} and \code{-Inf}) values, by warning you of
their presence and replacing the invalid values with \code{NA}. You can change
this behaviour with \code{gigs_option_set()} so that gigs does this silently, or
make gigs throw errors when confronted with bad data.
}
